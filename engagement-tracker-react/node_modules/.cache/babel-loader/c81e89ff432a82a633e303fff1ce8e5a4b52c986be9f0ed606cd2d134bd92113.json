{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nexport const detect = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\n  if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n    const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    webcamRef.current.video.width = videoWidth;\n    webcamRef.current.video.height = videoHeight;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const img = tf.browser.fromPixels(video);\n    const resized = tf.image.resizeBilinear(img, [120, 120]);\n    const normalized = resized.div(tf.scalar(255.0));\n    const casted = normalized.cast('float32');\n    const expanded = casted.expandDims(0);\n    const obj = await net.predict(expanded);\n    const isFace = await obj[0].array();\n    const isEngaged = await obj[1].array();\n    const boxes = await obj[2].array();\n    const ctx = canvasRef.current.getContext(\"2d\");\n    requestAnimationFrame(() => {\n      drawRect(boxes[0], isFace[0], isEngaged[0], videoWidth, videoHeight, ctx, updateEngagementLevel);\n    });\n    tf.dispose(img);\n    tf.dispose(resized);\n    tf.dispose(normalized);\n    tf.dispose(casted);\n    tf.dispose(expanded);\n    tf.dispose(obj);\n  }\n};\nexport const drawRect = (boxes, isFace, isEngaged, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\n  boxes[0] = boxes[0] * imgWidth;\n  boxes[1] = boxes[1] * imgHeight;\n  boxes[2] = boxes[2] * imgWidth;\n  boxes[3] = boxes[3] * imgHeight;\n  if (isFace[0] > 0.7) {\n    const [x1, y1, x2, y2] = boxes;\n    if (isEngaged[0] > 0.9) {\n      updateEngagementLevel(1);\n      ctx.strokeStyle = '#32cd80';\n      ctx.lineWidth = 10;\n      ctx.fillStyle = '#f5f5f5';\n      ctx.font = '1.2em Staatliches';\n      ctx.beginPath();\n      ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10);\n      ctx.rect(x1, y1, x2 - x1, y2 - y1);\n      ctx.stroke();\n    } else {\n      updateEngagementLevel(-1);\n      ctx.strokeStyle = '#ff4d4d';\n      ctx.lineWidth = 10;\n      ctx.fillStyle = '#f5f5f5';\n      ctx.font = '1.2em Staatliches';\n      ctx.beginPath();\n      ctx.fillText('Not Engaged: ' + Math.round((1 - isEngaged[0]) * 100) / 100, x1, y1 - 10);\n      ctx.rect(x1, y1, x2 - x1, y2 - y1);\n      ctx.stroke();\n    }\n  } else {\n    updateEngagementLevel(-1);\n  }\n};\n\n// --------------------------------------------------------------- //\n\nexport const detectYOLO = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\n  if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n    const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    webcamRef.current.video.width = videoWidth;\n    webcamRef.current.video.height = videoHeight;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const img = tf.browser.fromPixels(video);\n    const resized = tf.image.resizeBilinear(img, [640, 640]);\n    const casted = resized.cast('float32');\n    const expanded = casted.expandDims(0);\n    const obj = await net.predict(expanded);\n    const tensor = await obj.array();\n    const result = tensor[0];\n    const ctx = canvasRef.current.getContext(\"2d\");\n    requestAnimationFrame(() => {\n      drawRectYOLO(result[0], result[1], result[2], result[3], result[4], result[5], videoWidth, videoHeight, ctx, updateEngagementLevel);\n    });\n    tf.dispose(img);\n    tf.dispose(resized);\n    tf.dispose(casted);\n    tf.dispose(expanded);\n    tf.dispose(obj);\n    tf.dispose(tensor);\n    tf.dispose(result);\n  }\n};\nexport const drawRectYOLO = (x1, y1, x2, y2, score, class_id, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\n  const numBoxes = x1.length;\n  const boxConfidence = 0.6;\n  const classConfidence = 0.5;\n  const detections = [];\n  const points = [];\n\n  // console.log([x1[0], y1[0], x2[0], y2[0], score[0], class_id[0]])\n\n  for (let i = 0; i < numBoxes; i += 1) {\n    const currScore = score[i];\n    const classScore = class_id[i];\n    const xCenter = x1[i] / 640 * imgWidth;\n    const yCenter = y1[i] / 640 * imgHeight;\n    const width = x2[i] / 640 * imgWidth;\n    const height = y2[i] / 640 * imgHeight;\n    const topLeftX = xCenter - width / 2;\n    const topLeftY = yCenter - height / 2;\n    if (currScore > boxConfidence) {\n      // detections.push({\n      //     x1: topLeftX,\n      //     y1: topLeftY,\n      //     width: width,\n      //     height: height,\n      //     confidence: currScore,\n      //     class: classScore,\n      // })\n\n      points.push({\n        x: topLeftX,\n        y: topLeftY,\n        width: width,\n        height: height,\n        confidence: currScore,\n        class: classScore\n      });\n    }\n  }\n  const nmsDetections = applyNMS(points, 10);\n  console.log(nmsDetections);\n  nmsDetections.forEach(box => {\n    if (box.class > classConfidence) {\n      ctx.strokeStyle = '#32cd80';\n      ctx.lineWidth = 10;\n      ctx.fillStyle = '#f5f5f5';\n      ctx.font = '1.2em Staatliches';\n      ctx.beginPath();\n      ctx.fillText(box.class, box.x, box.y - 10);\n      ctx.rect(box.x, box.y, box.width, box.height);\n      ctx.stroke();\n    } else {\n      ctx.strokeStyle = '#ff4d4d';\n      ctx.lineWidth = 10;\n      ctx.fillStyle = '#f5f5f5';\n      ctx.font = '1.2em Staatliches';\n      ctx.beginPath();\n      ctx.fillText(box.class, box.x, box.y - 10);\n      ctx.rect(box.x, box.y, box.width, box.height);\n      ctx.stroke();\n    }\n  });\n};\nfunction calculateIoU(boxA, boxB) {\n  const x1A = boxA.x;\n  const y1A = boxA.y;\n  const x2A = boxA.x + boxA.width;\n  const y2A = boxA.y + boxA.height;\n  const x1B = boxB.x;\n  const y1B = boxB.y;\n  const x2B = boxB.x + boxB.width;\n  const y2B = boxB.y + boxB.height;\n  const xA = Math.max(x1A, x1B);\n  const yA = Math.max(y1A, y1B);\n  const xB = Math.min(x2A, x2B);\n  const yB = Math.min(y2A, y2B);\n  const intersectionArea = Math.max(0, xB - xA) * Math.max(0, yB - yA);\n  const boxAArea = (x2A - x1A) * (y2A - y1A);\n  const boxBArea = (x2B - x1B) * (y2B - y1B);\n  const iou = intersectionArea / (boxAArea + boxBArea - intersectionArea);\n  return iou;\n}\n\n// Function to apply Non-Maximum Suppression (NMS) to a list of bounding boxes\nfunction applyNMS(bboxes, threshold) {\n  const nmsBboxes = [];\n\n  // Sort bounding boxes by confidence in descending order\n  bboxes.sort((a, b) => b.confidence - a.confidence);\n  while (bboxes.length > 0) {\n    const currentBox = bboxes.shift();\n    nmsBboxes.push(currentBox);\n    bboxes = bboxes.filter(otherBox => {\n      const iou = calculateIoU(currentBox, otherBox);\n      return iou <= threshold;\n    });\n  }\n  return nmsBboxes;\n}","map":{"version":3,"names":["tf","detect","net","webcamRef","canvasRef","updateEngagementLevel","current","video","readyState","videoWidth","videoHeight","width","height","img","browser","fromPixels","resized","image","resizeBilinear","normalized","div","scalar","casted","cast","expanded","expandDims","obj","predict","isFace","array","isEngaged","boxes","ctx","getContext","requestAnimationFrame","drawRect","dispose","imgWidth","imgHeight","x1","y1","x2","y2","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","detectYOLO","tensor","result","drawRectYOLO","score","class_id","numBoxes","length","boxConfidence","classConfidence","detections","points","i","currScore","classScore","xCenter","yCenter","topLeftX","topLeftY","push","x","y","confidence","class","nmsDetections","applyNMS","console","log","forEach","box","calculateIoU","boxA","boxB","x1A","y1A","x2A","y2A","x1B","y1B","x2B","y2B","xA","max","yA","xB","min","yB","intersectionArea","boxAArea","boxBArea","iou","bboxes","threshold","nmsBboxes","sort","a","b","currentBox","shift","filter","otherBox"],"sources":["C:/Users/reddy/Documents/Projects/Engagement Tracker/engagement-tracker-react/src/util/utilities.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\n\r\nexport const detect = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\r\n    if (\r\n        typeof webcamRef.current !== \"undefined\" &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n    ) {\r\n        const video = webcamRef.current.video;\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        webcamRef.current.video.width = videoWidth;\r\n        webcamRef.current.video.height = videoHeight;\r\n\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        const img = tf.browser.fromPixels(video)\r\n        const resized = tf.image.resizeBilinear(img, [120,120])\r\n        const normalized = resized.div(tf.scalar(255.0))\r\n        \r\n        const casted = normalized.cast('float32')\r\n        const expanded = casted.expandDims(0)\r\n\r\n        const obj = await net.predict(expanded)\r\n\r\n        const isFace = await obj[0].array()\r\n        const isEngaged = await obj[1].array()\r\n        const boxes = await obj[2].array()\r\n        \r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        requestAnimationFrame(\r\n            () => {\r\n                drawRect(boxes[0], isFace[0], isEngaged[0], videoWidth, videoHeight, ctx, updateEngagementLevel)\r\n            }); \r\n\r\n        tf.dispose(img)\r\n        tf.dispose(resized)\r\n        tf.dispose(normalized)\r\n        tf.dispose(casted)\r\n        tf.dispose(expanded)\r\n        tf.dispose(obj)\r\n    }\r\n}\r\n\r\nexport const drawRect = (boxes, isFace, isEngaged, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\r\n    boxes[0] = boxes[0] * imgWidth\r\n    boxes[1] = boxes[1] * imgHeight\r\n    boxes[2] = boxes[2] * imgWidth\r\n    boxes[3] = boxes[3] * imgHeight\r\n\r\n    if(isFace[0] > 0.7){\r\n        const [x1, y1, x2, y2] = boxes\r\n        \r\n        if (isEngaged[0] > 0.9) {\r\n            updateEngagementLevel(1)\r\n\r\n            ctx.strokeStyle = '#32cd80'\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = '#f5f5f5'\r\n            ctx.font = '1.2em Staatliches'         \r\n            \r\n            ctx.beginPath()\r\n            ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10)\r\n            ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n            ctx.stroke()\r\n        } else {\r\n            updateEngagementLevel(-1)\r\n\r\n            ctx.strokeStyle = '#ff4d4d'\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = '#f5f5f5'\r\n            ctx.font = '1.2em Staatliches'         \r\n            \r\n            ctx.beginPath()\r\n            ctx.fillText('Not Engaged: ' + Math.round((1 - isEngaged[0]) * 100) / 100, x1, y1 - 10)\r\n            ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n            ctx.stroke()\r\n        }\r\n    } else {\r\n        updateEngagementLevel(-1)\r\n    }\r\n}\r\n\r\n// --------------------------------------------------------------- //\r\n\r\nexport const detectYOLO = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\r\n    if (\r\n        typeof webcamRef.current !== \"undefined\" &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n    ) {\r\n        const video = webcamRef.current.video;\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        webcamRef.current.video.width = videoWidth;\r\n        webcamRef.current.video.height = videoHeight;\r\n\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        const img = tf.browser.fromPixels(video)\r\n        const resized = tf.image.resizeBilinear(img, [640,640])\r\n        \r\n        const casted = resized.cast('float32')\r\n        const expanded = casted.expandDims(0)\r\n\r\n        const obj = await net.predict(expanded)\r\n        const tensor = await obj.array()\r\n        const result = tensor[0]\r\n        \r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        requestAnimationFrame(\r\n            () => {\r\n                drawRectYOLO(result[0], result[1], result[2], result[3], result[4], result[5], videoWidth, videoHeight, ctx, updateEngagementLevel)\r\n            }); \r\n\r\n        tf.dispose(img)\r\n        tf.dispose(resized)\r\n        tf.dispose(casted)\r\n        tf.dispose(expanded)\r\n        tf.dispose(obj)\r\n\r\n        tf.dispose(tensor)\r\n        tf.dispose(result)\r\n    }\r\n}\r\n\r\nexport const drawRectYOLO = (x1, y1, x2, y2, score, class_id, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\r\n    const numBoxes = x1.length\r\n    const boxConfidence = 0.6\r\n    const classConfidence = 0.5\r\n    \r\n    const detections = [];\r\n    const points = [];\r\n\r\n    // console.log([x1[0], y1[0], x2[0], y2[0], score[0], class_id[0]])\r\n\r\n    for (let i = 0; i < numBoxes; i += 1) {\r\n        const currScore = score[i]\r\n        const classScore = class_id[i]\r\n\r\n        const xCenter = (x1[i] / 640) * imgWidth;\r\n        const yCenter = (y1[i] / 640) * imgHeight;\r\n        const width = (x2[i] / 640) * imgWidth;\r\n        const height = (y2[i] / 640) * imgHeight;\r\n        \r\n        const topLeftX = (xCenter - (width / 2));\r\n        const topLeftY = (yCenter - (height / 2));\r\n\r\n        if (currScore > boxConfidence) {\r\n            // detections.push({\r\n            //     x1: topLeftX,\r\n            //     y1: topLeftY,\r\n            //     width: width,\r\n            //     height: height,\r\n            //     confidence: currScore,\r\n            //     class: classScore,\r\n            // })\r\n\r\n            points.push({\r\n                x: topLeftX,\r\n                y: topLeftY,\r\n                width: width,\r\n                height: height,\r\n                confidence: currScore,\r\n                class: classScore,\r\n            })\r\n        }\r\n    }\r\n\r\n    const nmsDetections = applyNMS(points, 10);\r\n    console.log(nmsDetections)\r\n\r\n    nmsDetections.forEach((box) => {  \r\n        if (box.class > classConfidence) {\r\n            ctx.strokeStyle = '#32cd80'\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = '#f5f5f5'\r\n            ctx.font = '1.2em Staatliches'         \r\n            \r\n            ctx.beginPath()\r\n            ctx.fillText(box.class, box.x, box.y - 10)\r\n            ctx.rect(box.x, box.y, (box.width), (box.height));\r\n            ctx.stroke()\r\n        } \r\n        else {\r\n            ctx.strokeStyle = '#ff4d4d'\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = '#f5f5f5'\r\n            ctx.font = '1.2em Staatliches'        \r\n            \r\n            ctx.beginPath()\r\n            ctx.fillText(box.class, box.x, box.y - 10)\r\n            ctx.rect(box.x, box.y, (box.width), (box.height));\r\n            ctx.stroke()\r\n        }\r\n    })\r\n}\r\n\r\nfunction calculateIoU(boxA, boxB) {\r\n    const x1A = boxA.x;\r\n    const y1A = boxA.y;\r\n    const x2A = boxA.x + boxA.width;\r\n    const y2A = boxA.y + boxA.height;\r\n  \r\n    const x1B = boxB.x;\r\n    const y1B = boxB.y;\r\n    const x2B = boxB.x + boxB.width;\r\n    const y2B = boxB.y + boxB.height;\r\n  \r\n    const xA = Math.max(x1A, x1B);\r\n    const yA = Math.max(y1A, y1B);\r\n    const xB = Math.min(x2A, x2B);\r\n    const yB = Math.min(y2A, y2B);\r\n  \r\n    const intersectionArea = Math.max(0, xB - xA) * Math.max(0, yB - yA);\r\n  \r\n    const boxAArea = (x2A - x1A) * (y2A - y1A);\r\n    const boxBArea = (x2B - x1B) * (y2B - y1B);\r\n  \r\n    const iou = intersectionArea / (boxAArea + boxBArea - intersectionArea);\r\n  \r\n    return iou;\r\n  }\r\n  \r\n  // Function to apply Non-Maximum Suppression (NMS) to a list of bounding boxes\r\n  function applyNMS(bboxes, threshold) {\r\n    const nmsBboxes = [];\r\n  \r\n    // Sort bounding boxes by confidence in descending order\r\n    bboxes.sort((a, b) => b.confidence - a.confidence);\r\n  \r\n    while (bboxes.length > 0) {\r\n      const currentBox = bboxes.shift();\r\n      nmsBboxes.push(currentBox);\r\n  \r\n      bboxes = bboxes.filter((otherBox) => {\r\n        const iou = calculateIoU(currentBox, otherBox);\r\n        return iou <= threshold;\r\n      });\r\n    }\r\n  \r\n    return nmsBboxes;\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}