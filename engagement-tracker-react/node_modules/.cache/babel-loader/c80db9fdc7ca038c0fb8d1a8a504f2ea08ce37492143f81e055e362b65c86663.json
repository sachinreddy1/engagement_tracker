{"ast":null,"code":"import * as tf from \"@tensorflow/tfjs\";\nexport const detect = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\n  if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n    const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    webcamRef.current.video.width = videoWidth;\n    webcamRef.current.video.height = videoHeight;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const img = tf.browser.fromPixels(video);\n    const resized = tf.image.resizeBilinear(img, [120, 120]);\n    const normalized = resized.div(tf.scalar(255.0));\n    const casted = normalized.cast('float32');\n    const expanded = casted.expandDims(0);\n    const obj = await net.predict(expanded);\n    const isFace = await obj[0].array();\n    const isEngaged = await obj[1].array();\n    const boxes = await obj[2].array();\n    const ctx = canvasRef.current.getContext(\"2d\");\n    requestAnimationFrame(() => {\n      drawRect(boxes[0], isFace[0], isEngaged[0], videoWidth, videoHeight, ctx, updateEngagementLevel);\n    });\n    tf.dispose(img);\n    tf.dispose(resized);\n    tf.dispose(normalized);\n    tf.dispose(casted);\n    tf.dispose(expanded);\n    tf.dispose(obj);\n  }\n};\nexport const drawRect = (boxes, isFace, isEngaged, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\n  boxes[0] = boxes[0] * imgWidth;\n  boxes[1] = boxes[1] * imgHeight;\n  boxes[2] = boxes[2] * imgWidth;\n  boxes[3] = boxes[3] * imgHeight;\n  if (isFace[0] > 0.7) {\n    const [x1, y1, x2, y2] = boxes;\n    if (isEngaged[0] > 0.9) {\n      updateEngagementLevel(1);\n      ctx.strokeStyle = '#32cd80';\n      ctx.lineWidth = 10;\n      ctx.fillStyle = '#f5f5f5';\n      ctx.font = '1.2em Staatliches';\n      ctx.beginPath();\n      ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10);\n      ctx.rect(x1, y1, x2 - x1, y2 - y1);\n      ctx.stroke();\n    } else {\n      updateEngagementLevel(-1);\n      ctx.strokeStyle = '#ff4d4d';\n      ctx.lineWidth = 10;\n      ctx.fillStyle = '#f5f5f5';\n      ctx.font = '1.2em Staatliches';\n      ctx.beginPath();\n      ctx.fillText('Not Engaged: ' + Math.round((1 - isEngaged[0]) * 100) / 100, x1, y1 - 10);\n      ctx.rect(x1, y1, x2 - x1, y2 - y1);\n      ctx.stroke();\n    }\n  } else {\n    updateEngagementLevel(-1);\n  }\n};\n\n// --------------------------------------------------------------- //\n\nexport const detectYOLO = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\n  if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n    const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    webcamRef.current.video.width = videoWidth;\n    webcamRef.current.video.height = videoHeight;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const img = tf.browser.fromPixels(video);\n    const resized = tf.image.resizeBilinear(img, [640, 640]);\n    const normalized = resized.div(tf.scalar(255.0));\n    const casted = normalized.cast('float32');\n    const expanded = casted.expandDims(0);\n    const obj = await net.predict(expanded);\n    const tensor = await obj.array();\n    const result = tensor[0];\n\n    // console.log(result)\n\n    const ctx = canvasRef.current.getContext(\"2d\");\n    requestAnimationFrame(() => {\n      drawRectYOLO(result[0], result[1], result[2], result[3], result[4], result[5], videoWidth, videoHeight, ctx, updateEngagementLevel);\n    });\n    tf.dispose(img);\n    tf.dispose(resized);\n    tf.dispose(normalized);\n    tf.dispose(casted);\n    tf.dispose(expanded);\n    tf.dispose(obj);\n    tf.dispose(tensor);\n    tf.dispose(result);\n  }\n};\nexport const drawRectYOLO = (x1, y1, x2, y2, score, class_id, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\n  const numBoxes = 8400;\n  const boxConfidence = 0.7;\n  const detections = [];\n  for (let i = 0; i < numBoxes; i += 1) {\n    const currScore = score[i];\n    console.log(currScore);\n    if (currScore < boxConfidence) {\n      continue;\n    }\n    detections.push({\n      class: class_id[i],\n      confidence: currScore,\n      x1: x1[i],\n      y1: y1[i],\n      x2: x2[i],\n      y2: y2[i]\n    });\n  }\n  detections.forEach(box => {\n    console.log(box);\n    ctx.strokeStyle = '#32cd80';\n    ctx.lineWidth = 10;\n    ctx.fillStyle = '#f5f5f5';\n    ctx.font = '1.2em Staatliches';\n    ctx.beginPath();\n    // ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10)\n    ctx.rect(box.x1, box.y1, box.x2 - box.x1, box.y2 - box.y1);\n    ctx.stroke();\n  });\n\n  // if(isFace[0] > 0.7){\n  //     const [x1, y1, x2, y2] = boxes\n\n  //     if (isEngaged[0] > 0.9) {\n  //         updateEngagementLevel(1)\n\n  //         ctx.strokeStyle = '#32cd80'\n  //         ctx.lineWidth = 10\n  //         ctx.fillStyle = '#f5f5f5'\n  //         ctx.font = '1.2em Staatliches'         \n\n  //         ctx.beginPath()\n  //         ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10)\n  //         ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\n  //         ctx.stroke()\n  //     } else {\n  //         updateEngagementLevel(-1)\n\n  //         ctx.strokeStyle = '#ff4d4d'\n  //         ctx.lineWidth = 10\n  //         ctx.fillStyle = '#f5f5f5'\n  //         ctx.font = '1.2em Staatliches'         \n\n  //         ctx.beginPath()\n  //         ctx.fillText('Not Engaged: ' + Math.round((1 - isEngaged[0]) * 100) / 100, x1, y1 - 10)\n  //         ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\n  //         ctx.stroke()\n  //     }\n  // } else {\n  //     updateEngagementLevel(-1)\n  // }\n};","map":{"version":3,"names":["tf","detect","net","webcamRef","canvasRef","updateEngagementLevel","current","video","readyState","videoWidth","videoHeight","width","height","img","browser","fromPixels","resized","image","resizeBilinear","normalized","div","scalar","casted","cast","expanded","expandDims","obj","predict","isFace","array","isEngaged","boxes","ctx","getContext","requestAnimationFrame","drawRect","dispose","imgWidth","imgHeight","x1","y1","x2","y2","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","detectYOLO","tensor","result","drawRectYOLO","score","class_id","numBoxes","boxConfidence","detections","i","currScore","console","log","push","class","confidence","forEach","box"],"sources":["C:/Users/reddy/Documents/Projects/Engagement Tracker/engagement-tracker-react/src/util/utilities.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\n\r\nexport const detect = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\r\n    if (\r\n        typeof webcamRef.current !== \"undefined\" &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n    ) {\r\n        const video = webcamRef.current.video;\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        webcamRef.current.video.width = videoWidth;\r\n        webcamRef.current.video.height = videoHeight;\r\n\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        const img = tf.browser.fromPixels(video)\r\n        const resized = tf.image.resizeBilinear(img, [120,120])\r\n        const normalized = resized.div(tf.scalar(255.0))\r\n        \r\n        const casted = normalized.cast('float32')\r\n        const expanded = casted.expandDims(0)\r\n\r\n        const obj = await net.predict(expanded)\r\n\r\n        const isFace = await obj[0].array()\r\n        const isEngaged = await obj[1].array()\r\n        const boxes = await obj[2].array()\r\n        \r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        requestAnimationFrame(\r\n            () => {\r\n                drawRect(boxes[0], isFace[0], isEngaged[0], videoWidth, videoHeight, ctx, updateEngagementLevel)\r\n            }); \r\n\r\n        tf.dispose(img)\r\n        tf.dispose(resized)\r\n        tf.dispose(normalized)\r\n        tf.dispose(casted)\r\n        tf.dispose(expanded)\r\n        tf.dispose(obj)\r\n    }\r\n}\r\n\r\nexport const drawRect = (boxes, isFace, isEngaged, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\r\n    boxes[0] = boxes[0] * imgWidth\r\n    boxes[1] = boxes[1] * imgHeight\r\n    boxes[2] = boxes[2] * imgWidth\r\n    boxes[3] = boxes[3] * imgHeight\r\n\r\n    if(isFace[0] > 0.7){\r\n        const [x1, y1, x2, y2] = boxes\r\n        \r\n        if (isEngaged[0] > 0.9) {\r\n            updateEngagementLevel(1)\r\n\r\n            ctx.strokeStyle = '#32cd80'\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = '#f5f5f5'\r\n            ctx.font = '1.2em Staatliches'         \r\n            \r\n            ctx.beginPath()\r\n            ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10)\r\n            ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n            ctx.stroke()\r\n        } else {\r\n            updateEngagementLevel(-1)\r\n\r\n            ctx.strokeStyle = '#ff4d4d'\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = '#f5f5f5'\r\n            ctx.font = '1.2em Staatliches'         \r\n            \r\n            ctx.beginPath()\r\n            ctx.fillText('Not Engaged: ' + Math.round((1 - isEngaged[0]) * 100) / 100, x1, y1 - 10)\r\n            ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n            ctx.stroke()\r\n        }\r\n    } else {\r\n        updateEngagementLevel(-1)\r\n    }\r\n}\r\n\r\n// --------------------------------------------------------------- //\r\n\r\nexport const detectYOLO = async (net, webcamRef, canvasRef, updateEngagementLevel) => {\r\n    if (\r\n        typeof webcamRef.current !== \"undefined\" &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n    ) {\r\n        const video = webcamRef.current.video;\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        webcamRef.current.video.width = videoWidth;\r\n        webcamRef.current.video.height = videoHeight;\r\n\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        const img = tf.browser.fromPixels(video)\r\n        const resized = tf.image.resizeBilinear(img, [640,640])\r\n        const normalized = resized.div(tf.scalar(255.0))\r\n        \r\n        const casted = normalized.cast('float32')\r\n        const expanded = casted.expandDims(0)\r\n\r\n        const obj = await net.predict(expanded)\r\n        const tensor = await obj.array()\r\n        const result = tensor[0]\r\n\r\n        // console.log(result)\r\n        \r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        requestAnimationFrame(\r\n            () => {\r\n                drawRectYOLO(result[0], result[1], result[2], result[3], result[4], result[5], videoWidth, videoHeight, ctx, updateEngagementLevel)\r\n            }); \r\n\r\n        tf.dispose(img)\r\n        tf.dispose(resized)\r\n        tf.dispose(normalized)\r\n        tf.dispose(casted)\r\n        tf.dispose(expanded)\r\n        tf.dispose(obj)\r\n\r\n        tf.dispose(tensor)\r\n        tf.dispose(result)\r\n    }\r\n}\r\n\r\nexport const drawRectYOLO = (x1, y1, x2, y2, score, class_id, imgWidth, imgHeight, ctx, updateEngagementLevel) => {\r\n    const numBoxes = 8400\r\n    const boxConfidence = 0.7\r\n    \r\n    const detections = [];\r\n\r\n    for (let i = 0; i < numBoxes; i += 1) {\r\n        const currScore = score[i]\r\n        console.log(currScore)\r\n\r\n        if (currScore < boxConfidence) {\r\n            continue\r\n        }\r\n\r\n        detections.push({\r\n            class: class_id[i],\r\n            confidence: currScore,\r\n            x1: x1[i],\r\n            y1: y1[i],\r\n            x2: x2[i],\r\n            y2: y2[i],\r\n        })\r\n    }\r\n\r\n    detections.forEach((box) => {\r\n        console.log(box)\r\n\r\n        ctx.strokeStyle = '#32cd80'\r\n        ctx.lineWidth = 10\r\n        ctx.fillStyle = '#f5f5f5'\r\n        ctx.font = '1.2em Staatliches'         \r\n        \r\n        ctx.beginPath()\r\n        // ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10)\r\n        ctx.rect(box.x1, box.y1, (box.x2 - box.x1), (box.y2 - box.y1));\r\n        ctx.stroke()\r\n    })\r\n\r\n    // if(isFace[0] > 0.7){\r\n    //     const [x1, y1, x2, y2] = boxes\r\n        \r\n    //     if (isEngaged[0] > 0.9) {\r\n    //         updateEngagementLevel(1)\r\n\r\n    //         ctx.strokeStyle = '#32cd80'\r\n    //         ctx.lineWidth = 10\r\n    //         ctx.fillStyle = '#f5f5f5'\r\n    //         ctx.font = '1.2em Staatliches'         \r\n            \r\n    //         ctx.beginPath()\r\n    //         ctx.fillText('Engaged: ' + Math.round(isEngaged[0] * 100) / 100, x1, y1 - 10)\r\n    //         ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n    //         ctx.stroke()\r\n    //     } else {\r\n    //         updateEngagementLevel(-1)\r\n\r\n    //         ctx.strokeStyle = '#ff4d4d'\r\n    //         ctx.lineWidth = 10\r\n    //         ctx.fillStyle = '#f5f5f5'\r\n    //         ctx.font = '1.2em Staatliches'         \r\n            \r\n    //         ctx.beginPath()\r\n    //         ctx.fillText('Not Engaged: ' + Math.round((1 - isEngaged[0]) * 100) / 100, x1, y1 - 10)\r\n    //         ctx.rect(x1, y1, (x2 - x1), (y2 - y1));\r\n    //         ctx.stroke()\r\n    //     }\r\n    // } else {\r\n    //     updateEngagementLevel(-1)\r\n    // }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,kBAAkB;AAEtC,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,qBAAqB,KAAK;EAC9E,IACI,OAAOF,SAAS,CAACG,OAAO,KAAK,WAAW,IACxCH,SAAS,CAACG,OAAO,KAAK,IAAI,IAC1BH,SAAS,CAACG,OAAO,CAACC,KAAK,CAACC,UAAU,KAAK,CAAC,EAC1C;IACE,MAAMD,KAAK,GAAGJ,SAAS,CAACG,OAAO,CAACC,KAAK;IACrC,MAAME,UAAU,GAAGN,SAAS,CAACG,OAAO,CAACC,KAAK,CAACE,UAAU;IACrD,MAAMC,WAAW,GAAGP,SAAS,CAACG,OAAO,CAACC,KAAK,CAACG,WAAW;IAEvDP,SAAS,CAACG,OAAO,CAACC,KAAK,CAACI,KAAK,GAAGF,UAAU;IAC1CN,SAAS,CAACG,OAAO,CAACC,KAAK,CAACK,MAAM,GAAGF,WAAW;IAE5CN,SAAS,CAACE,OAAO,CAACK,KAAK,GAAGF,UAAU;IACpCL,SAAS,CAACE,OAAO,CAACM,MAAM,GAAGF,WAAW;IAEtC,MAAMG,GAAG,GAAGb,EAAE,CAACc,OAAO,CAACC,UAAU,CAACR,KAAK,CAAC;IACxC,MAAMS,OAAO,GAAGhB,EAAE,CAACiB,KAAK,CAACC,cAAc,CAACL,GAAG,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;IACvD,MAAMM,UAAU,GAAGH,OAAO,CAACI,GAAG,CAACpB,EAAE,CAACqB,MAAM,CAAC,KAAK,CAAC,CAAC;IAEhD,MAAMC,MAAM,GAAGH,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;IACzC,MAAMC,QAAQ,GAAGF,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;IAErC,MAAMC,GAAG,GAAG,MAAMxB,GAAG,CAACyB,OAAO,CAACH,QAAQ,CAAC;IAEvC,MAAMI,MAAM,GAAG,MAAMF,GAAG,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC;IACnC,MAAMC,SAAS,GAAG,MAAMJ,GAAG,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC;IACtC,MAAME,KAAK,GAAG,MAAML,GAAG,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC;IAElC,MAAMG,GAAG,GAAG5B,SAAS,CAACE,OAAO,CAAC2B,UAAU,CAAC,IAAI,CAAC;IAE9CC,qBAAqB,CACjB,MAAM;MACFC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAEH,MAAM,CAAC,CAAC,CAAC,EAAEE,SAAS,CAAC,CAAC,CAAC,EAAErB,UAAU,EAAEC,WAAW,EAAEsB,GAAG,EAAE3B,qBAAqB,CAAC;IACpG,CAAC,CAAC;IAENL,EAAE,CAACoC,OAAO,CAACvB,GAAG,CAAC;IACfb,EAAE,CAACoC,OAAO,CAACpB,OAAO,CAAC;IACnBhB,EAAE,CAACoC,OAAO,CAACjB,UAAU,CAAC;IACtBnB,EAAE,CAACoC,OAAO,CAACd,MAAM,CAAC;IAClBtB,EAAE,CAACoC,OAAO,CAACZ,QAAQ,CAAC;IACpBxB,EAAE,CAACoC,OAAO,CAACV,GAAG,CAAC;EACnB;AACJ,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAGA,CAACJ,KAAK,EAAEH,MAAM,EAAEE,SAAS,EAAEO,QAAQ,EAAEC,SAAS,EAAEN,GAAG,EAAE3B,qBAAqB,KAAK;EACnG0B,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGM,QAAQ;EAC9BN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGO,SAAS;EAC/BP,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGM,QAAQ;EAC9BN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGO,SAAS;EAE/B,IAAGV,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,EAAC;IACf,MAAM,CAACW,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGX,KAAK;IAE9B,IAAID,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;MACpBzB,qBAAqB,CAAC,CAAC,CAAC;MAExB2B,GAAG,CAACW,WAAW,GAAG,SAAS;MAC3BX,GAAG,CAACY,SAAS,GAAG,EAAE;MAClBZ,GAAG,CAACa,SAAS,GAAG,SAAS;MACzBb,GAAG,CAACc,IAAI,GAAG,mBAAmB;MAE9Bd,GAAG,CAACe,SAAS,CAAC,CAAC;MACff,GAAG,CAACgB,QAAQ,CAAC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACpB,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAES,EAAE,EAAEC,EAAE,GAAG,EAAE,CAAC;MAC7ER,GAAG,CAACmB,IAAI,CAACZ,EAAE,EAAEC,EAAE,EAAGC,EAAE,GAAGF,EAAE,EAAIG,EAAE,GAAGF,EAAG,CAAC;MACtCR,GAAG,CAACoB,MAAM,CAAC,CAAC;IAChB,CAAC,MAAM;MACH/C,qBAAqB,CAAC,CAAC,CAAC,CAAC;MAEzB2B,GAAG,CAACW,WAAW,GAAG,SAAS;MAC3BX,GAAG,CAACY,SAAS,GAAG,EAAE;MAClBZ,GAAG,CAACa,SAAS,GAAG,SAAS;MACzBb,GAAG,CAACc,IAAI,GAAG,mBAAmB;MAE9Bd,GAAG,CAACe,SAAS,CAAC,CAAC;MACff,GAAG,CAACgB,QAAQ,CAAC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGpB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAES,EAAE,EAAEC,EAAE,GAAG,EAAE,CAAC;MACvFR,GAAG,CAACmB,IAAI,CAACZ,EAAE,EAAEC,EAAE,EAAGC,EAAE,GAAGF,EAAE,EAAIG,EAAE,GAAGF,EAAG,CAAC;MACtCR,GAAG,CAACoB,MAAM,CAAC,CAAC;IAChB;EACJ,CAAC,MAAM;IACH/C,qBAAqB,CAAC,CAAC,CAAC,CAAC;EAC7B;AACJ,CAAC;;AAED;;AAEA,OAAO,MAAMgD,UAAU,GAAG,MAAAA,CAAOnD,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,qBAAqB,KAAK;EAClF,IACI,OAAOF,SAAS,CAACG,OAAO,KAAK,WAAW,IACxCH,SAAS,CAACG,OAAO,KAAK,IAAI,IAC1BH,SAAS,CAACG,OAAO,CAACC,KAAK,CAACC,UAAU,KAAK,CAAC,EAC1C;IACE,MAAMD,KAAK,GAAGJ,SAAS,CAACG,OAAO,CAACC,KAAK;IACrC,MAAME,UAAU,GAAGN,SAAS,CAACG,OAAO,CAACC,KAAK,CAACE,UAAU;IACrD,MAAMC,WAAW,GAAGP,SAAS,CAACG,OAAO,CAACC,KAAK,CAACG,WAAW;IAEvDP,SAAS,CAACG,OAAO,CAACC,KAAK,CAACI,KAAK,GAAGF,UAAU;IAC1CN,SAAS,CAACG,OAAO,CAACC,KAAK,CAACK,MAAM,GAAGF,WAAW;IAE5CN,SAAS,CAACE,OAAO,CAACK,KAAK,GAAGF,UAAU;IACpCL,SAAS,CAACE,OAAO,CAACM,MAAM,GAAGF,WAAW;IAEtC,MAAMG,GAAG,GAAGb,EAAE,CAACc,OAAO,CAACC,UAAU,CAACR,KAAK,CAAC;IACxC,MAAMS,OAAO,GAAGhB,EAAE,CAACiB,KAAK,CAACC,cAAc,CAACL,GAAG,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;IACvD,MAAMM,UAAU,GAAGH,OAAO,CAACI,GAAG,CAACpB,EAAE,CAACqB,MAAM,CAAC,KAAK,CAAC,CAAC;IAEhD,MAAMC,MAAM,GAAGH,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;IACzC,MAAMC,QAAQ,GAAGF,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;IAErC,MAAMC,GAAG,GAAG,MAAMxB,GAAG,CAACyB,OAAO,CAACH,QAAQ,CAAC;IACvC,MAAM8B,MAAM,GAAG,MAAM5B,GAAG,CAACG,KAAK,CAAC,CAAC;IAChC,MAAM0B,MAAM,GAAGD,MAAM,CAAC,CAAC,CAAC;;IAExB;;IAEA,MAAMtB,GAAG,GAAG5B,SAAS,CAACE,OAAO,CAAC2B,UAAU,CAAC,IAAI,CAAC;IAE9CC,qBAAqB,CACjB,MAAM;MACFsB,YAAY,CAACD,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAE9C,UAAU,EAAEC,WAAW,EAAEsB,GAAG,EAAE3B,qBAAqB,CAAC;IACvI,CAAC,CAAC;IAENL,EAAE,CAACoC,OAAO,CAACvB,GAAG,CAAC;IACfb,EAAE,CAACoC,OAAO,CAACpB,OAAO,CAAC;IACnBhB,EAAE,CAACoC,OAAO,CAACjB,UAAU,CAAC;IACtBnB,EAAE,CAACoC,OAAO,CAACd,MAAM,CAAC;IAClBtB,EAAE,CAACoC,OAAO,CAACZ,QAAQ,CAAC;IACpBxB,EAAE,CAACoC,OAAO,CAACV,GAAG,CAAC;IAEf1B,EAAE,CAACoC,OAAO,CAACkB,MAAM,CAAC;IAClBtD,EAAE,CAACoC,OAAO,CAACmB,MAAM,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACjB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEe,KAAK,EAAEC,QAAQ,EAAErB,QAAQ,EAAEC,SAAS,EAAEN,GAAG,EAAE3B,qBAAqB,KAAK;EAC9G,MAAMsD,QAAQ,GAAG,IAAI;EACrB,MAAMC,aAAa,GAAG,GAAG;EAEzB,MAAMC,UAAU,GAAG,EAAE;EAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,IAAI,CAAC,EAAE;IAClC,MAAMC,SAAS,GAAGN,KAAK,CAACK,CAAC,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IAEtB,IAAIA,SAAS,GAAGH,aAAa,EAAE;MAC3B;IACJ;IAEAC,UAAU,CAACK,IAAI,CAAC;MACZC,KAAK,EAAET,QAAQ,CAACI,CAAC,CAAC;MAClBM,UAAU,EAAEL,SAAS;MACrBxB,EAAE,EAAEA,EAAE,CAACuB,CAAC,CAAC;MACTtB,EAAE,EAAEA,EAAE,CAACsB,CAAC,CAAC;MACTrB,EAAE,EAAEA,EAAE,CAACqB,CAAC,CAAC;MACTpB,EAAE,EAAEA,EAAE,CAACoB,CAAC;IACZ,CAAC,CAAC;EACN;EAEAD,UAAU,CAACQ,OAAO,CAAEC,GAAG,IAAK;IACxBN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;IAEhBtC,GAAG,CAACW,WAAW,GAAG,SAAS;IAC3BX,GAAG,CAACY,SAAS,GAAG,EAAE;IAClBZ,GAAG,CAACa,SAAS,GAAG,SAAS;IACzBb,GAAG,CAACc,IAAI,GAAG,mBAAmB;IAE9Bd,GAAG,CAACe,SAAS,CAAC,CAAC;IACf;IACAf,GAAG,CAACmB,IAAI,CAACmB,GAAG,CAAC/B,EAAE,EAAE+B,GAAG,CAAC9B,EAAE,EAAG8B,GAAG,CAAC7B,EAAE,GAAG6B,GAAG,CAAC/B,EAAE,EAAI+B,GAAG,CAAC5B,EAAE,GAAG4B,GAAG,CAAC9B,EAAG,CAAC;IAC9DR,GAAG,CAACoB,MAAM,CAAC,CAAC;EAChB,CAAC,CAAC;;EAEF;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}