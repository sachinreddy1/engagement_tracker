{"ast":null,"code":"export const json = [{\n  'tfOpName': 'EmptyTensorList',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 1,\n    'name': 'maxNumElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'LoopCond',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'pred',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Switch',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'data',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'pred',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Merge',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }]\n}, {\n  'tfOpName': 'Enter',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'frame_name',\n    'name': 'frameName',\n    'type': 'string'\n  }, {\n    'tfName': 'is_constant',\n    'name': 'isConstant',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Exit',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'NextIteration',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'size',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'dynamic_size',\n    'name': 'dynamicSize',\n    'type': 'bool'\n  }, {\n    'tfName': 'clear_after_read',\n    'name': 'clearAfterRead',\n    'type': 'bool'\n  }, {\n    'tfName': 'identical_element_shapes',\n    'name': 'identicalElementShapes',\n    'type': 'bool'\n  }, {\n    'tfName': 'tensor_array_name',\n    'name': 'name',\n    'type': 'string'\n  }]\n}, {\n  'tfOpName': 'TensorArrayWriteV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayReadV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayGatherV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }]\n}, {\n  'tfOpName': 'TensorArrayScatterV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorArrayConcatV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape_except0',\n    'name': 'elementShapeExcept0',\n    'type': 'shape',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArraySplitV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'lengths',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorArraySizeV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'flowIn',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'TensorArrayCloseV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'StatelessIf',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'cond',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'then_branch',\n    'name': 'thenBranch',\n    'type': 'func'\n  }, {\n    'tfName': 'else_branch',\n    'name': 'elseBranch',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'If',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'cond',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'then_branch',\n    'name': 'thenBranch',\n    'type': 'func'\n  }, {\n    'tfName': 'else_branch',\n    'name': 'elseBranch',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'StatelessWhile',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'cond',\n    'name': 'cond',\n    'type': 'func'\n  }, {\n    'tfName': 'body',\n    'name': 'body',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'While',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'cond',\n    'name': 'cond',\n    'type': 'func'\n  }, {\n    'tfName': 'body',\n    'name': 'body',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'TensorListScatter',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListScatterV2',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 3,\n    'name': 'numElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListGather',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListGetItem',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListSetItem',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListReserve',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 1,\n    'name': 'numElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListFromTensor',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListStack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }, {\n    'tfName': 'num_elements',\n    'name': 'numElements',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListSplit',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 2,\n    'name': 'lengths',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListConcat',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListPopBack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListPushBack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}];","map":{"version":3,"names":["json"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-converter\\src\\operations\\op_list\\control.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'EmptyTensorList',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 1, 'name': 'maxNumElements', 'type': 'number'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'LoopCond',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'pred', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Switch',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'pred', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'category': 'control',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Enter',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'frame_name', 'name': 'frameName', 'type': 'string'},\n      {'tfName': 'is_constant', 'name': 'isConstant', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'size', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'},\n      {'tfName': 'dynamic_size', 'name': 'dynamicSize', 'type': 'bool'},\n      {'tfName': 'clear_after_read', 'name': 'clearAfterRead', 'type': 'bool'},\n      {\n        'tfName': 'identical_element_shapes',\n        'name': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {'tfName': 'tensor_array_name', 'name': 'name', 'type': 'string'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{\n      'tfName': 'dtype',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}, {\n        'tfName': 'element_shape_except0',\n        'name': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 2, 'name': 'lengths', 'type': 'number[]'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'StatelessIf',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'cond', 'type': 'tensor'},\n      {'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors'}\n    ],\n    'attrs': [\n      {'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func'},\n      {'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'If',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'cond', 'type': 'tensor'},\n      {'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors'}\n    ],\n    'attrs': [\n      {'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func'},\n      {'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'StatelessWhile',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'cond', 'name': 'cond', 'type': 'func'},\n      {'tfName': 'body', 'name': 'body', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'While',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'cond', 'name': 'cond', 'type': 'func'},\n      {'tfName': 'body', 'name': 'body', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorListScatter',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'}\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListScatterV2',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 3, 'name': 'numElements', 'type': 'number'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListGather',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListGetItem',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListSetItem',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListReserve',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 1, 'name': 'numElements', 'type': 'number'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListFromTensor',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'}\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListStack',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs': [\n      {'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'},\n      {'tfName': 'num_elements', 'name': 'numElements', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorListSplit',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 2, 'name': 'lengths', 'type': 'number[]'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListConcat',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'},\n      {'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorListPopBack',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListPushBack',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}\n    ]\n  }\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}