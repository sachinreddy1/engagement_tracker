{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { GatherNDProgram } from '../gather_nd_gpu';\nimport { reshape } from './Reshape';\nexport function gatherNd(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    params,\n    indices\n  } = inputs;\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n  const [resultShape, numSlices, sliceSize, strides] = backend_util.prepareAndValidate(params, indices);\n  const flattenIndices = reshape({\n    inputs: {\n      x: indices\n    },\n    backend,\n    attrs: {\n      shape: [numSlices, sliceRank]\n    }\n  });\n  const flattenX = reshape({\n    inputs: {\n      x: params\n    },\n    backend,\n    attrs: {\n      shape: [util.sizeFromShape(params.shape) / sliceSize, sliceSize]\n    }\n  });\n  const program = new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n  const res = backend.runWebGLProgram(program, [flattenX, flattenIndices], flattenX.dtype);\n  const reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend,\n    attrs: {\n      shape: resultShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\nexport const gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'webgl',\n  kernelFunc: gatherNd\n};","map":{"version":3,"names":["backend_util","GatherNd","util","GatherNDProgram","reshape","gatherNd","args","inputs","backend","params","indices","indicesShape","shape","sliceRank","length","resultShape","numSlices","sliceSize","strides","prepareAndValidate","flattenIndices","x","attrs","flattenX","sizeFromShape","program","res","runWebGLProgram","dtype","reshaped","disposeIntermediateTensorInfo","gatherNdConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\Engagement Tracker\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\GatherNd.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherNd, GatherNdInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {GatherNDProgram} from '../gather_nd_gpu';\nimport {reshape} from './Reshape';\n\nexport function gatherNd(\n    args: {inputs: GatherNdInputs, backend: MathBackendWebGL}): TensorInfo {\n  const {inputs, backend} = args;\n  const {params, indices} = inputs;\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      backend_util.prepareAndValidate(params, indices);\n\n  const flattenIndices = reshape(\n      {inputs: {x: indices}, backend, attrs: {shape: [numSlices, sliceRank]}});\n  const flattenX = reshape({\n    inputs: {x: params},\n    backend,\n    attrs: {shape: [(util.sizeFromShape(params.shape) / sliceSize), sliceSize]}\n  });\n\n  const program =\n      new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n  const res = backend.runWebGLProgram(\n      program, [flattenX, flattenIndices], flattenX.dtype);\n\n  const reshaped =\n      reshape({inputs: {x: res}, backend, attrs: {shape: resultShape}});\n\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(res);\n\n  return reshaped;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'webgl',\n  kernelFunc: gatherNd as {} as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,QAAQ,EAAwDC,IAAI,QAAO,uBAAuB;AAGxH,SAAQC,eAAe,QAAO,kBAAkB;AAChD,SAAQC,OAAO,QAAO,WAAW;AAEjC,OAAM,SAAUC,QAAQA,CACpBC,IAAyD;EAC3D,MAAM;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAGF,IAAI;EAC9B,MAAM;IAACG,MAAM;IAAEC;EAAO,CAAC,GAAGH,MAAM;EAEhC,MAAMI,YAAY,GAAGD,OAAO,CAACE,KAAK;EAClC,MAAMC,SAAS,GAAGF,YAAY,CAACA,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC;EAEvD,MAAM,CAACC,WAAW,EAAEC,SAAS,EAAEC,SAAS,EAAEC,OAAO,CAAC,GAC9ClB,YAAY,CAACmB,kBAAkB,CAACV,MAAM,EAAEC,OAAO,CAAC;EAEpD,MAAMU,cAAc,GAAGhB,OAAO,CAC1B;IAACG,MAAM,EAAE;MAACc,CAAC,EAAEX;IAAO,CAAC;IAAEF,OAAO;IAAEc,KAAK,EAAE;MAACV,KAAK,EAAE,CAACI,SAAS,EAAEH,SAAS;IAAC;EAAC,CAAC,CAAC;EAC5E,MAAMU,QAAQ,GAAGnB,OAAO,CAAC;IACvBG,MAAM,EAAE;MAACc,CAAC,EAAEZ;IAAM,CAAC;IACnBD,OAAO;IACPc,KAAK,EAAE;MAACV,KAAK,EAAE,CAAEV,IAAI,CAACsB,aAAa,CAACf,MAAM,CAACG,KAAK,CAAC,GAAGK,SAAS,EAAGA,SAAS;IAAC;GAC3E,CAAC;EAEF,MAAMQ,OAAO,GACT,IAAItB,eAAe,CAACU,SAAS,EAAEK,OAAO,EAAE,CAACF,SAAS,EAAEC,SAAS,CAAC,CAAC;EACnE,MAAMS,GAAG,GAAGlB,OAAO,CAACmB,eAAe,CAC/BF,OAAO,EAAE,CAACF,QAAQ,EAAEH,cAAc,CAAC,EAAEG,QAAQ,CAACK,KAAK,CAAC;EAExD,MAAMC,QAAQ,GACVzB,OAAO,CAAC;IAACG,MAAM,EAAE;MAACc,CAAC,EAAEK;IAAG,CAAC;IAAElB,OAAO;IAAEc,KAAK,EAAE;MAACV,KAAK,EAAEG;IAAW;EAAC,CAAC,CAAC;EAErEP,OAAO,CAACsB,6BAA6B,CAACV,cAAc,CAAC;EACrDZ,OAAO,CAACsB,6BAA6B,CAACP,QAAQ,CAAC;EAC/Cf,OAAO,CAACsB,6BAA6B,CAACJ,GAAG,CAAC;EAE1C,OAAOG,QAAQ;AACjB;AAEA,OAAO,MAAME,cAAc,GAAiB;EAC1CC,UAAU,EAAE/B,QAAQ;EACpBgC,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE7B;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}