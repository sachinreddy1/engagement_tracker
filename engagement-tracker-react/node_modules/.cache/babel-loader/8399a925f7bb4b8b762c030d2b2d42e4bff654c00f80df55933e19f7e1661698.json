{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { elu } from '../../ops/elu';\nimport { Tensor } from '../../tensor';\nTensor.prototype.elu = function () {\n  this.throwIfDisposed();\n  return elu(this);\n};","map":{"version":3,"names":["elu","Tensor","prototype","throwIfDisposed"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-core\\src\\public\\chained_ops\\elu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {elu} from '../../ops/elu';\nimport {Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    elu<T extends Tensor>(): T;\n  }\n}\n\nTensor.prototype.elu = function<T extends Tensor>(this: T): T {\n  this.throwIfDisposed();\n  return elu(this);\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,GAAG,QAAO,eAAe;AACjC,SAAQC,MAAM,QAAO,cAAc;AASnCA,MAAM,CAACC,SAAS,CAACF,GAAG,GAAG;EACrB,IAAI,CAACG,eAAe,EAAE;EACtB,OAAOH,GAAG,CAAC,IAAI,CAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}