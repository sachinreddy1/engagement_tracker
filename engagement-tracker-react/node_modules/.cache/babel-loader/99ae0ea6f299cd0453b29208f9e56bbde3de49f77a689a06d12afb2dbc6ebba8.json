{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { lessEqual } from '../../ops/less_equal';\nimport { Tensor } from '../../tensor';\nTensor.prototype.lessEqual = function (b) {\n  this.throwIfDisposed();\n  return lessEqual(this, b);\n};","map":{"version":3,"names":["lessEqual","Tensor","prototype","b","throwIfDisposed"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\Engagement Tracker\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-core\\src\\public\\chained_ops\\less_equal.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {lessEqual} from '../../ops/less_equal';\nimport {Tensor} from '../../tensor';\nimport {Rank, TensorLike} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    lessEqual<T extends Tensor>(b: Tensor|TensorLike): T;\n  }\n}\n\nTensor.prototype.lessEqual = function<T extends Tensor>(b: Tensor|\n                                                        TensorLike): T {\n  this.throwIfDisposed();\n  return lessEqual(this, b);\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,SAAS,QAAO,sBAAsB;AAC9C,SAAQC,MAAM,QAAO,cAAc;AASnCA,MAAM,CAACC,SAAS,CAACF,SAAS,GAAG,UAA2BG,CACU;EAChE,IAAI,CAACC,eAAe,EAAE;EACtB,OAAOJ,SAAS,CAAC,IAAI,EAAEG,CAAC,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}