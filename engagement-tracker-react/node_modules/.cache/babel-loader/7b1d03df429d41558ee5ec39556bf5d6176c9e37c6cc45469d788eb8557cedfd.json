{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\n/**\n * In WebGL data is stored in GPU textures which can't be efficiently copied, so\n * complex tensors share data with their real and imaginary components. Complex\n * tensors increment the `complexParentRefCount` properties of the underlying\n * data buckets to prevent them from being disposed, as the engine's disposal\n * logic does not account for data sharing by complex tensors.\n *\n * When a complex tensor is disposed, it will explicitly decrease the\n * `complexParentRefCount` properties of its underlying components.\n */\nexport function complex(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    real,\n    imag\n  } = inputs;\n  const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n  const complex = backend.texData.get(complexInfo.dataId);\n  const realTensorInfo = identity({\n    inputs: {\n      x: real\n    },\n    backend\n  });\n  const realData = backend.texData.get(realTensorInfo.dataId);\n  realData.complexParentRefCount++;\n  const imagTensorInfo = identity({\n    inputs: {\n      x: imag\n    },\n    backend\n  });\n  const imagData = backend.texData.get(imagTensorInfo.dataId);\n  imagData.complexParentRefCount++;\n  complex.complexTensorInfos = {\n    real: realTensorInfo,\n    imag: imagTensorInfo\n  };\n  return complexInfo;\n}\nexport const complexConfig = {\n  kernelName: Complex,\n  backendName: 'webgl',\n  kernelFunc: complex\n};","map":{"version":3,"names":["Complex","identity","complex","args","inputs","backend","real","imag","complexInfo","makeTensorInfo","shape","texData","get","dataId","realTensorInfo","x","realData","complexParentRefCount","imagTensorInfo","imagData","complexTensorInfos","complexConfig","kernelName","backendName","kernelFunc"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\kernels\\Complex.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Complex, ComplexInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {identity} from './Identity';\n\n/**\n * In WebGL data is stored in GPU textures which can't be efficiently copied, so\n * complex tensors share data with their real and imaginary components. Complex\n * tensors increment the `complexParentRefCount` properties of the underlying\n * data buckets to prevent them from being disposed, as the engine's disposal\n * logic does not account for data sharing by complex tensors.\n *\n * When a complex tensor is disposed, it will explicitly decrease the\n * `complexParentRefCount` properties of its underlying components.\n */\nexport function complex(\n    args: {inputs: ComplexInputs, backend: MathBackendWebGL}): TensorInfo {\n  const {inputs, backend} = args;\n  const {real, imag} = inputs;\n\n  const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n  const complex = backend.texData.get(complexInfo.dataId);\n\n  const realTensorInfo = identity({inputs: {x: real}, backend});\n  const realData = backend.texData.get(realTensorInfo.dataId);\n  realData.complexParentRefCount++;\n\n  const imagTensorInfo = identity({inputs: {x: imag}, backend});\n  const imagData = backend.texData.get(imagTensorInfo.dataId);\n  imagData.complexParentRefCount++;\n\n  complex.complexTensorInfos = {real: realTensorInfo, imag: imagTensorInfo};\n\n  return complexInfo;\n}\n\nexport const complexConfig: KernelConfig = {\n  kernelName: Complex,\n  backendName: 'webgl',\n  kernelFunc: complex as {} as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAA4D,uBAAuB;AAGlG,SAAQC,QAAQ,QAAO,YAAY;AAEnC;;;;;;;;;;AAUA,OAAM,SAAUC,OAAOA,CACnBC,IAAwD;EAC1D,MAAM;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAGF,IAAI;EAC9B,MAAM;IAACG,IAAI;IAAEC;EAAI,CAAC,GAAGH,MAAM;EAE3B,MAAMI,WAAW,GAAGH,OAAO,CAACI,cAAc,CAACH,IAAI,CAACI,KAAK,EAAE,WAAW,CAAC;EACnE,MAAMR,OAAO,GAAGG,OAAO,CAACM,OAAO,CAACC,GAAG,CAACJ,WAAW,CAACK,MAAM,CAAC;EAEvD,MAAMC,cAAc,GAAGb,QAAQ,CAAC;IAACG,MAAM,EAAE;MAACW,CAAC,EAAET;IAAI,CAAC;IAAED;EAAO,CAAC,CAAC;EAC7D,MAAMW,QAAQ,GAAGX,OAAO,CAACM,OAAO,CAACC,GAAG,CAACE,cAAc,CAACD,MAAM,CAAC;EAC3DG,QAAQ,CAACC,qBAAqB,EAAE;EAEhC,MAAMC,cAAc,GAAGjB,QAAQ,CAAC;IAACG,MAAM,EAAE;MAACW,CAAC,EAAER;IAAI,CAAC;IAAEF;EAAO,CAAC,CAAC;EAC7D,MAAMc,QAAQ,GAAGd,OAAO,CAACM,OAAO,CAACC,GAAG,CAACM,cAAc,CAACL,MAAM,CAAC;EAC3DM,QAAQ,CAACF,qBAAqB,EAAE;EAEhCf,OAAO,CAACkB,kBAAkB,GAAG;IAACd,IAAI,EAAEQ,cAAc;IAAEP,IAAI,EAAEW;EAAc,CAAC;EAEzE,OAAOV,WAAW;AACpB;AAEA,OAAO,MAAMa,aAAa,GAAiB;EACzCC,UAAU,EAAEtB,OAAO;EACnBuB,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEtB;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}