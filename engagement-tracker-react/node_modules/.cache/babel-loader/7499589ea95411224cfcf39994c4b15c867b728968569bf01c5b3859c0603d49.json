{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels, getSourceCoords } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class UnpackProgram {\n  constructor(outputShape) {\n    this.variableNames = ['A'];\n    this.packedInputs = true;\n    this.packedOutput = false;\n    this.outputShape = outputShape;\n    const rank = outputShape.length;\n    const channels = getChannels('rc', rank);\n    const dtype = getCoordsDataType(rank);\n    const sourceCoords = getSourceCoords(rank, channels);\n    const innerDims = channels.slice(-2);\n    const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n    this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n  }\n}","map":{"version":3,"names":["getChannels","getSourceCoords","getCoordsDataType","UnpackProgram","constructor","outputShape","variableNames","packedInputs","packedOutput","rank","length","channels","dtype","sourceCoords","innerDims","slice","coords","join","userCode"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\Engagement Tracker\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\unpack_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels, getSourceCoords} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class UnpackProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  packedInputs = true;\n  packedOutput = false;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(outputShape: number[]) {\n    this.outputShape = outputShape;\n    const rank = outputShape.length;\n\n    const channels = getChannels('rc', rank);\n    const dtype = getCoordsDataType(rank);\n    const sourceCoords = getSourceCoords(rank, channels);\n    const innerDims = channels.slice(-2);\n    const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n\n    this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,WAAW,EAAEC,eAAe,QAAO,gBAAgB;AAC3D,SAAQC,iBAAiB,QAAO,mBAAmB;AAEnD,OAAM,MAAOC,aAAa;EAOxBC,YAAYC,WAAqB;IANjC,KAAAC,aAAa,GAAG,CAAC,GAAG,CAAC;IACrB,KAAAC,YAAY,GAAG,IAAI;IACnB,KAAAC,YAAY,GAAG,KAAK;IAKlB,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,MAAMI,IAAI,GAAGJ,WAAW,CAACK,MAAM;IAE/B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,IAAI,EAAES,IAAI,CAAC;IACxC,MAAMG,KAAK,GAAGV,iBAAiB,CAACO,IAAI,CAAC;IACrC,MAAMI,YAAY,GAAGZ,eAAe,CAACQ,IAAI,EAAEE,QAAQ,CAAC;IACpD,MAAMG,SAAS,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,MAAMC,MAAM,GAAGP,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,QAAQK,SAAS,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG;IAEhE,IAAI,CAACC,QAAQ,GAAG;;UAEVN,KAAK;kCACmBC,YAAY;;4CAEFG,MAAM;;KAE7C;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}