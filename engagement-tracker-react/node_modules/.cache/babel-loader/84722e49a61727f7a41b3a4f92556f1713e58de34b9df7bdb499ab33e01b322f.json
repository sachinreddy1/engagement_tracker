{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PadPackedProgram {\n  constructor(xShape, paddings, constantValue) {\n    this.variableNames = ['x'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n    const rank = xShape.length;\n    const dtype = getCoordsDataType(rank);\n    const start = paddings.map(p => p[0]).join(',');\n    const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n    const coords = getChannels('rc', rank);\n    const source = getChannels('source', rank);\n    const cLimit = \"\".concat(coords[rank - 1], \" < \").concat(this.outputShape[rank - 1]);\n    const innerDims = rank === 1 ? 'source' : \"vec2(\".concat(source.slice(-2).join(), \")\");\n    const componentSetup = [\"\".concat(dtype, \" rc = outputLoc;\"), \"\".concat(coords[rank - 1], \" += 1;\\n       if(\").concat(cLimit, \") {\\n      \"), rank === 1 ? '' : \"}\\n       rc = outputLoc;\\n       \".concat(coords[rank - 2], \" += 1;\\n       if(\").concat(coords[rank - 2], \" < \").concat(this.outputShape[rank - 2], \") {\"), rank === 1 ? '' : \"  \".concat(coords[rank - 1], \" += 1;\\n         if(\").concat(cLimit, \") {\")];\n    const paddingArea = rank === 1 ? 'rc < start || rc >= end' : 'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n    let mainLoop = '';\n    for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n      mainLoop += \"\\n        \".concat(componentSetup[i], \"\\n        if (\").concat(paddingArea, \") {\\n          result[\").concat(i, \"] = float(\").concat(constantValue, \");\\n        } else {\\n          \").concat(dtype, \" source = rc - start;\\n          result[\").concat(i, \"] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        }\\n      \");\n    }\n    mainLoop += rank === 1 ? \"} \" : \"}}\";\n    this.userCode = \"\\n      const \".concat(dtype, \" start = \").concat(dtype, \"(\").concat(start, \");\\n      const \").concat(dtype, \" end = \").concat(dtype, \"(\").concat(end, \");\\n\\n      void main() {\\n        \").concat(dtype, \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \").concat(mainLoop, \"\\n        setOutput(result);\\n      }\\n    \");\n  }\n}","map":{"version":3,"names":["getChannels","getCoordsDataType","PadPackedProgram","constructor","xShape","paddings","constantValue","variableNames","packedInputs","packedOutput","outputShape","map","p","i","rank","length","dtype","start","join","end","coords","source","cLimit","concat","innerDims","slice","componentSetup","paddingArea","mainLoop","j","userCode"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\Engagement Tracker\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\pad_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class PadPackedProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      xShape: number[], paddings: Array<[number, number]>,\n      constantValue: number) {\n    this.outputShape = paddings.map(\n        (p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n    const rank = xShape.length;\n    const dtype = getCoordsDataType(rank);\n\n    const start = paddings.map(p => p[0]).join(',');\n    const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n    const coords = getChannels('rc', rank);\n    const source = getChannels('source', rank);\n    const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n    const innerDims =\n        rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n\n    const componentSetup = [\n      `${dtype} rc = outputLoc;`, `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n      rank === 1 ? '' : `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n      rank === 1 ? '' : `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n    ];\n\n    const paddingArea = rank === 1 ?\n        'rc < start || rc >= end' :\n        'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n    let mainLoop = '';\n    for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n      mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(${constantValue});\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n    }\n    mainLoop += (rank === 1 ? `} ` : `}}`);\n\n    this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}