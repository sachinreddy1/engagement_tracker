{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function assertShapesMatchAllowUndefinedSize(shapeA, shapeB) {\n  let errorMessagePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  util.assert(shapesEqualAllowUndefinedSize(shapeA, shapeB), () => errorMessagePrefix + \" Shapes \".concat(shapeA, \" and \").concat(shapeB, \" must match\"));\n}\nexport function shapesEqualAllowUndefinedSize(n1, n2) {\n  if (n1.length !== n2.length) {\n    return false;\n  }\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["util","assertShapesMatchAllowUndefinedSize","shapeA","shapeB","errorMessagePrefix","arguments","length","undefined","assert","shapesEqualAllowUndefinedSize","concat","n1","n2","i"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-converter\\src\\executor\\tensor_utils.ts"],"sourcesContent":["\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\nexport function assertShapesMatchAllowUndefinedSize(\n    shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n  util.assert(\n      shapesEqualAllowUndefinedSize(shapeA, shapeB),\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\n\nexport function shapesEqualAllowUndefinedSize(n1: number[], n2: number[]) {\n  if (n1.length !== n2.length) {\n    return false;\n  }\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"mappings":"AACA;;;;;;;;;;;;;;;;AAgBA;;;;;AAMA,SAAQA,IAAI,QAAO,uBAAuB;AAE1C,OAAM,SAAUC,mCAAmCA,CAC/CC,MAAgB,EAAEC,MAAgB,EAAyB;EAAA,IAAvBC,kBAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC7DL,IAAI,CAACQ,MAAM,CACPC,6BAA6B,CAACP,MAAM,EAAEC,MAAM,CAAC,EAC7C,MAAMC,kBAAkB,cAAAM,MAAA,CAAcR,MAAM,WAAAQ,MAAA,CAAQP,MAAM,gBAAa,CAAC;AAC9E;AAEA,OAAM,SAAUM,6BAA6BA,CAACE,EAAY,EAAEC,EAAY;EACtE,IAAID,EAAE,CAACL,MAAM,KAAKM,EAAE,CAACN,MAAM,EAAE;IAC3B,OAAO,KAAK;;EAEd,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,CAACL,MAAM,EAAEO,CAAC,EAAE,EAAE;IAClC,IAAIF,EAAE,CAACE,CAAC,CAAC,KAAK,CAAC,CAAC,IAAID,EAAE,CAACC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAIF,EAAE,CAACE,CAAC,CAAC,KAAKD,EAAE,CAACC,CAAC,CAAC,EAAE;MACnD,OAAO,KAAK;;;EAGhB,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}