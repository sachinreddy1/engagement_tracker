{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { lessStrict } from '../../ops/ops';\nimport { Tensor } from '../../tensor';\nTensor.prototype.lessStrict = function (x) {\n  this.throwIfDisposed();\n  return lessStrict(this, x);\n};","map":{"version":3,"names":["lessStrict","Tensor","prototype","x","throwIfDisposed"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-core\\src\\public\\chained_ops\\less_strict.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {lessStrict} from '../../ops/ops';\nimport {Tensor} from '../../tensor';\nimport {Rank, TensorLike} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    lessStrict<T extends Tensor>(this: T, x: T|TensorLike): T;\n  }\n}\n\nTensor.prototype.lessStrict = function<T extends Tensor>(\n    this: T, x: T|TensorLike) {\n  this.throwIfDisposed();\n  return lessStrict(this, x);\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;AACA,SAAQA,UAAU,QAAO,eAAe;AACxC,SAAQC,MAAM,QAAO,cAAc;AASnCA,MAAM,CAACC,SAAS,CAACF,UAAU,GAAG,UACjBG,CAAe;EAC1B,IAAI,CAACC,eAAe,EAAE;EACtB,OAAOJ,UAAU,CAAC,IAAI,EAAEG,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}