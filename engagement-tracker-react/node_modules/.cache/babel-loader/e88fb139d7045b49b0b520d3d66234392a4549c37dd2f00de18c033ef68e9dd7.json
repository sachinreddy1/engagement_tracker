{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposePackedProgram {\n  constructor(aShape, newDim) {\n    this.variableNames = ['A'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    const outputShape = new Array(aShape.length);\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    if (this.rank > 6) {\n      throw Error(\"Packed transpose for rank \".concat(this.rank, \" is not yet supported.\"));\n    }\n    const dtype = getCoordsDataType(this.rank);\n    const outputOrder = getVecChannels('rc', this.rank);\n    const switchedOrder = new Array(this.rank);\n    for (let i = 0; i < newDim.length; i++) {\n      switchedOrder[newDim[i]] = outputOrder[i];\n    }\n    const innerDims = \"vec2(\".concat(switchedOrder.slice(-2).join(), \")\");\n    const nextColumn = \"++\".concat(outputOrder[this.rank - 1], \" < \").concat(outputShape[this.rank - 1]);\n    const getc = \"getChannel(getA(\".concat(switchedOrder.join(), \"), \").concat(innerDims, \")\");\n    this.userCode = \"\\n    void main() {\\n      \".concat(dtype, \" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \").concat(getc, \";\\n      if(\").concat(nextColumn, \") {\\n        result[1] = \").concat(getc, \";\\n      }\\n      --\").concat(outputOrder[this.rank - 1], \";\\n      if(++\").concat(outputOrder[this.rank - 2], \" < \").concat(outputShape[this.rank - 2], \") {\\n        result[2] = \").concat(getc, \";\\n        if(\").concat(nextColumn, \") {\\n          result[3] = \").concat(getc, \";\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    \");\n  }\n}","map":{"version":3,"names":["getVecChannels","getCoordsDataType","TransposePackedProgram","constructor","aShape","newDim","variableNames","packedInputs","packedOutput","outputShape","Array","length","i","rank","Error","concat","dtype","outputOrder","switchedOrder","innerDims","slice","join","nextColumn","getc","userCode"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\transpose_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getVecChannels} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class TransposePackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n  packedInputs = true;\n  packedOutput = true;\n\n  constructor(aShape: number[], newDim: number[]) {\n    const outputShape: number[] = new Array(aShape.length);\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    if (this.rank > 6) {\n      throw Error(\n          `Packed transpose for rank ${this.rank} is not yet supported.`);\n    }\n    const dtype = getCoordsDataType(this.rank);\n\n    const outputOrder = getVecChannels('rc', this.rank);\n    const switchedOrder = new Array(this.rank);\n    for (let i = 0; i < newDim.length; i++) {\n      switchedOrder[newDim[i]] = outputOrder[i];\n    }\n    const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n    const nextColumn =\n        `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n    const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n\n    this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }\n      setOutput(result);\n    }\n    `;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,cAAc,QAAO,gBAAgB;AAC7C,SAAQC,iBAAiB,QAAO,mBAAmB;AAEnD,OAAM,MAAOC,sBAAsB;EAQjCC,YAAYC,MAAgB,EAAEC,MAAgB;IAP9C,KAAAC,aAAa,GAAG,CAAC,GAAG,CAAC;IAIrB,KAAAC,YAAY,GAAG,IAAI;IACnB,KAAAC,YAAY,GAAG,IAAI;IAGjB,MAAMC,WAAW,GAAa,IAAIC,KAAK,CAACN,MAAM,CAACO,MAAM,CAAC;IACtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC3CH,WAAW,CAACG,CAAC,CAAC,GAAGR,MAAM,CAACC,MAAM,CAACO,CAAC,CAAC,CAAC;;IAEpC,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACI,IAAI,GAAGJ,WAAW,CAACE,MAAM;IAC9B,IAAI,IAAI,CAACE,IAAI,GAAG,CAAC,EAAE;MACjB,MAAMC,KAAK,8BAAAC,MAAA,CACsB,IAAI,CAACF,IAAI,2BAAwB,CAAC;;IAErE,MAAMG,KAAK,GAAGf,iBAAiB,CAAC,IAAI,CAACY,IAAI,CAAC;IAE1C,MAAMI,WAAW,GAAGjB,cAAc,CAAC,IAAI,EAAE,IAAI,CAACa,IAAI,CAAC;IACnD,MAAMK,aAAa,GAAG,IAAIR,KAAK,CAAC,IAAI,CAACG,IAAI,CAAC;IAC1C,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACM,MAAM,EAAEC,CAAC,EAAE,EAAE;MACtCM,aAAa,CAACb,MAAM,CAACO,CAAC,CAAC,CAAC,GAAGK,WAAW,CAACL,CAAC,CAAC;;IAE3C,MAAMO,SAAS,WAAAJ,MAAA,CAAWG,aAAa,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,MAAG;IAC3D,MAAMC,UAAU,QAAAP,MAAA,CACPE,WAAW,CAAC,IAAI,CAACJ,IAAI,GAAG,CAAC,CAAC,SAAAE,MAAA,CAAMN,WAAW,CAAC,IAAI,CAACI,IAAI,GAAG,CAAC,CAAC,CAAE;IACrE,MAAMU,IAAI,sBAAAR,MAAA,CAAsBG,aAAa,CAACG,IAAI,EAAE,SAAAN,MAAA,CAAMI,SAAS,MAAG;IAEtE,IAAI,CAACK,QAAQ,iCAAAT,MAAA,CAETC,KAAK,iFAAAD,MAAA,CAEOQ,IAAI,kBAAAR,MAAA,CACbO,UAAU,+BAAAP,MAAA,CACCQ,IAAI,0BAAAR,MAAA,CAEhBE,WAAW,CAAC,IAAI,CAACJ,IAAI,GAAG,CAAC,CAAC,oBAAAE,MAAA,CACvBE,WAAW,CAAC,IAAI,CAACJ,IAAI,GAAG,CAAC,CAAC,SAAAE,MAAA,CAAMN,WAAW,CAAC,IAAI,CAACI,IAAI,GAAG,CAAC,CAAC,+BAAAE,MAAA,CACjDQ,IAAI,oBAAAR,MAAA,CACbO,UAAU,iCAAAP,MAAA,CACCQ,IAAI,iEAKvB;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}