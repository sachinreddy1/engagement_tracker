{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D } from '../kernel_names';\nimport { avgPool3dGrad } from '../ops/avg_pool_3d_grad';\nexport const avgPool3DGradConfig = {\n  kernelName: AvgPool3D,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      filterSize,\n      strides,\n      dilations,\n      pad,\n      dimRoundingMode\n    } = attrs;\n    const $dilations = dilations == null ? [1, 1, 1] : dilations;\n    return {\n      x: () => avgPool3dGrad(dy, x, filterSize, strides, $dilations, pad, dimRoundingMode)\n    };\n  }\n};","map":{"version":3,"names":["AvgPool3D","avgPool3dGrad","avgPool3DGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","filterSize","strides","dilations","pad","dimRoundingMode","$dilations"],"sources":["C:\\Users\\reddy\\Documents\\Projects\\engagement-tracker-react\\node_modules\\@tensorflow\\tfjs-core\\src\\gradients\\AvgPool3D_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3D, AvgPool3DAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {avgPool3dGrad} from '../ops/avg_pool_3d_grad';\nimport {Tensor, Tensor5D} from '../tensor';\n\nexport const avgPool3DGradConfig: GradConfig = {\n  kernelName: AvgPool3D,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved as [Tensor5D];\n    const {filterSize, strides, dilations, pad, dimRoundingMode} =\n        attrs as {} as AvgPool3DAttrs;\n\n    const $dilations =\n        dilations == null ? [1, 1, 1] as [number, number, number] : dilations;\n\n    return {\n      x: () => avgPool3dGrad(\n          dy as Tensor5D, x, filterSize, strides, $dilations, pad,\n          dimRoundingMode)\n    };\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,SAAS,QAAuB,iBAAiB;AAEzD,SAAQC,aAAa,QAAO,yBAAyB;AAGrD,OAAO,MAAMC,mBAAmB,GAAe;EAC7CC,UAAU,EAAEH,SAAS;EACrBI,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC7D,MAAM,CAACC,CAAC,CAAC,GAAGF,KAAmB;IAC/B,MAAM;MAACG,UAAU;MAAEC,OAAO;MAAEC,SAAS;MAAEC,GAAG;MAAEC;IAAe,CAAC,GACxDN,KAA6B;IAEjC,MAAMO,UAAU,GACZH,SAAS,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAA6B,GAAGA,SAAS;IAEzE,OAAO;MACLH,CAAC,EAAEA,CAAA,KAAMR,aAAa,CAClBK,EAAc,EAAEG,CAAC,EAAEC,UAAU,EAAEC,OAAO,EAAEI,UAAU,EAAEF,GAAG,EACvDC,eAAe;KACpB;EACH;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}